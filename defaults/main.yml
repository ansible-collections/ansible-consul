---
# vim: set softtabstop=2 tabstop=2 shiftwidth=2 expandtab autoindent smartindent syntax=yaml:

## Core
consul_debug: false
is_virtualenv: ""
consul_install_dependencies: true

### Package
consul_version: "1.7.3"
consul_architecture_map:
  # this first entry seems redundant
  # (but it's required for reasons)
  amd64: amd64
  x86_64: amd64
  # todo: arm32 / armelv5
  armv6l: armhfv6
  armv7l: armhfv6
  aarch64: arm64
  32-bit: "386"
  64-bit: amd64
consul_architecture: "{{ consul_architecture_map[ansible_architecture] }}"
consul_os: >-
  {% if ansible_os_family == 'Windows' %}
  {{ 'windows' }}
  {% else %}
  {{- ansible_system | lower -}}
  {% endif %}
consul_pkg: "consul{% if consul_enterprise %}-enterprise{% else %}{%endif%}_{{ consul_version }}_{{ consul_os }}_{{ consul_architecture }}.zip"
consul_zip_url: "https://releases.hashicorp.com/consul/{{ consul_version }}/consul_{{ consul_version }}_{{ consul_os }}_{{ consul_architecture }}.zip"
consul_checksum_file_url: "https://releases.hashicorp.com/consul/{{ consul_version }}/consul_{{ consul_version}}_SHA256SUMS"

### Install Method
consul_install_remotely: false
consul_install_upgrade: false

### Paths
consul_bin_path: "/usr/local/bin"
consul_config_path: "/etc/consul"
consul_configd_path: "{{ consul_config_path }}/consul.d"
consul_bootstrap_state: "{{ consul_config_path }}/.consul_bootstrapped"
consul_log_path: "/var/log/consul"
consul_log_file: "consul.log"
consul_run_path: "/run/consul"
consul_binary: "{{ consul_bin_path }}/consul"

### System user and group
consul_manage_user: true
consul_user: "consul"
consul_manage_group: true
consul_group: "bin"
consul_systemd_restart_sec: 42
consul_systemd_limit_nofile: 65536

### Log user, group, facility
syslog_user: "root"
syslog_group: "adm"
consul_log_level: "INFO"
consul_log_rotate_bytes: "0"
consul_log_rotate_duration: "24h"
consul_log_rotate_max_files: "0"
consul_syslog_enable: false
consul_syslog_facility: "local0"
consul_configure_syslogd: false
consul_acl_enable: false
consul_tls_enable: false
consul_snapshot: false

# These variables are defined outsied of 'consul_config_defaults' to avoid
# duplicating the logic as it's not possible to create recursive/self-referential
# dicts in Ansible
consul_iface: >-
  {% if ansible_os_family == 'Windows' %}
  {{- ansible_interfaces[0].interface_name -}}
  {% else %}
  {{- ansible_default_ipv4.interface -}}
  {% endif %}

consul_env_vars:
- "CONSUL_UI_BETA=false"
consul_group_name: "consul_instances"

consul_servers: "\
{% set _consul_servers = [] %}\
{% for host in groups[consul_group_name] %}\
  {% set _consul_node_role = hostvars[host]['consul_node_role'] %}\
  {% if ( _consul_node_role == 'server' or _consul_node_role == 'bootstrap') %}\
    {% if _consul_servers.append(host) %}{% endif %}\
  {% endif %}\
{% endfor %}\
{{ _consul_servers }}"

consul_gather_server_facts: false

## ACL
consul_acl_policy: false

consul_tls_src_files: "{{ role_path + '/files' }}"
consul_tls_dir: "/etc/consul/ssl"
consul_tls_copy_keys: true
consul_tls_files_remote_src: false

# dnsmasq, does this really belong in this role? replace with systemd-resolved?
consul_dnsmasq_enable: false
consul_dnsmasq_bind_interfaces: false
consul_dnsmasq_consul_address: >-
  {# Use localhost if DNS is listening on all interfaces #}
  {% if consul_addresses.dns == '0.0.0.0' %}
  127.0.0.1
  {% else %}
  {{- consul_addresses.dns -}}
  {% endif %}
consul_dnsmasq_cache: -1
consul_dnsmasq_servers:
- 1.1.1.1
- 8.8.8.8
- 8.8.4.4
consul_dnsmasq_revservers: []
consul_dnsmasq_no_poll: false
consul_dnsmasq_no_resolv: false
consul_dnsmasq_local_service: false
consul_dnsmasq_listen_addresses: []
consul_delegate_datacenter_dns: false
consul_iptables_enable: false

consul_enterprise: false
# https://www.consul.io/docs/agent/services.html
consul_services: []
consul_join: []

consul_bind_addr: >-
  {% if ansible_system == 'FreeBSD' %}
  {{- hostvars[inventory_hostname]['ansible_'+ consul_iface ]['ipv4'][0]['address'] -}}
  {% elif ansible_os_family == 'Windows'  %}
  {{- hostvars[inventory_hostname]['ansible_ip_addresses'][0] -}}
  {% else %}
  {{- hostvars[inventory_hostname]['ansible_'+ consul_iface | replace('-', '_')]['ipv4']['address'] -}}
  {% endif %}

consul_client_addr: '127.0.0.1'
consul_node_role: "client"

### Consul settings
consul_config_defaults:
  data_dir: "/var/lib/consul"
  datacenter: "dc1"
  domain: "consul"
  alt_domain: ""
  node_meta: {}
  node_name: "{{ ansible_hostname }}"
  recursors: []
  server: true
  bootstrap_expect: 3
  #consul_bootstrap_expect_value: "{{ _consul_lan_servercount | int }}"
  #consul_bootstrap_expect_value: 3
  ui: true
  disable_update_check: false
  enable_script_checks: false
  enable_local_script_checks: false
  raft_protocol: 3
  #retry_join_skip_hosts: false
  retry_interval: "30s"
  retry_interval_wan: "30s"
  retry_max: 0
  retry_max_wan: 0

### Autopilot
  autopilot:
    #enable: "false"
    cleanup_dead_servers: false
    last_contact_threshold: "200ms"
    max_trailing_logs: 250
    server_stabilization_time: "10s"
    # Enterprise features
    #redundancy_zone_tag: "az"
    #disable_upgrade_migration: false
    #upgrade_version_tag: ""

### Addresses
  bind_addr:  "{{ consul_bind_addr }}"
  advertise_addr: "{{ consul_bind_addr }}"
  advertise_addr_wan: "{{ consul_bind_addr }}"
  translate_wan_addrs: false
  serf_lan: "{{ consul_bind_addr }}"
  serf_wan: "{{ consul_bind_addr }}"
  client_addr: "{{ consul_client_addr }}"
  addresses:
    dns: "{{ consul_client_addr }}"
    http: "{{ consul_client_addr }}"
    https: "{{ consul_client_addr }}"
    grpc: "{{ consul_client_addr }}"

### Ports
  ports:
    dns: 8600
    http: 8500
    https: -1
    #rpc: 8400
    serf_lan: 8301
    serf_wan: 8302
    server: 8300
    grpc: -1

### Servers
  retry_join: "{{ consul_servers }}"
  retry_join_wan: []

### Shared ACL config ###
  acl:
    token_ttl: "30s"
    enable_token_persistence: true
    #datacenter: "dc1"
    down_policy: "extend-cache"
    default_policy: "allow"
    #master_token_display: false
    tokens:
      master: ""
      default: ""
      agent: ""
      agent_master: ""
      replication: ""

## gossip encryption
  encrypt: "aqueDYp1a1is+J/y2C+cbQ=="
  encrypt_verify_incoming: true
  encrypt_verify_outgoing: true
  disable_keyring_file: false

## TLS
  #ca_crt: "ca.crt"
  #server_crt: "server.crt"
  #server_key: "server.key"
  verify_incoming: false
  verify_outgoing: false #TODO set to true?
  verify_incoming_rpc: false
  verify_incoming_https: false
  verify_server_hostname: false
  tls_min_version: "tls12"
  tls_cipher_suites: ""
  tls_prefer_server_cipher_suites: false

# Performance
  performance:
    raft_multiplier: 1
    leave_drain_time: 5s
    rpc_hold_timeout: 7s

# Connect
  connect:
    enabled: false

consul_snapshot_agent_defaults:
  http_addr: "{% if consul_tls_enable | bool %}https://{% endif %}{{ consul_client_address }}:{% if consul_tls_enable | bool %}{{ consul_ports.https }}{% else %}{{ consul_ports.http }}{% endif %}"
  ca_file": "{{ consul_tls_dir }}/{{ consul_tls_ca_crt }}"
  cert_file": "{{ consul_tls_dir }}/{{ consul_tls_server_crt }}"
  key_file": "{{ consul_tls_dir }}/{{ consul_tls_server_key }}"
  log:
    level: "INFO"
    enable_syslog: true
    syslog_facility: "LOCAL0"
  snapshot:
    interval: "1h"
    retain: "30"
    stale: false
    service: "consul_snapshot"
    deregister_after: "72h"
    lock_key: "consul_snapshot/lock"
    max_failures: 3
  local_storage:
    path: "{{ consul_config_path }}/snaps"
